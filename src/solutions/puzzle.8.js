const LINE_SEP = '\n';
const ANTINODE = '#';
const EMPTY = '.';

export function solvePart1() {
    const matrix = getMatrix();
    let antinodeMatrix = [...matrix.map(row => [...row])];
    const antennas = []; // {sign, row, col}

    for (let i = 0; i < matrix.length; i++) {
        for (let j = 0; j < matrix[i].length; j++) {
            if (matrix[i][j] !== EMPTY) {

                antennas.push({ sign: matrix[i][j], row: i, col: j });

            }
        }
    }

    antennas.forEach(antenna => {
        const otherSigns = antennas.filter(a => a.sign === antenna.sign && (a.row !== antenna.row || a.col !== antenna.col));
        for (let i = 0; i < otherSigns.length; i++) {
            const targetAntenna = otherSigns[i];
            const vector = { x: targetAntenna.col - antenna.col, y: targetAntenna.row - antenna.row };
            const antinode = { x: targetAntenna.col + vector.x, y: targetAntenna.row + vector.y };
            if (antinode.x < 0 || antinode.x >= matrix[0].length || antinode.y < 0 || antinode.y >= matrix.length) {
                continue;
            }
            antinodeMatrix[antinode.y][antinode.x] = ANTINODE;
        }
    });

    return antinodeMatrix.reduce((acc, row) => acc + row.filter(cell => cell === ANTINODE).length, 0);
}

export function solvePart2() {
    const matrix = getMatrix();
    let antinodeMatrix = [...matrix.map(row => [...row])];
    const antennas = []; // {sign, row, col}
    let antennaAdjustment = 0;

    for (let i = 0; i < matrix.length; i++) {
        for (let j = 0; j < matrix[i].length; j++) {
            if (matrix[i][j] !== EMPTY) {
                antennas.push({ sign: matrix[i][j], row: i, col: j });
            }
        }
    }

    antennas.forEach(antenna => {
        const otherSigns = antennas.filter(a => a.sign === antenna.sign && (a.row !== antenna.row || a.col !== antenna.col));
        for (let i = 0; i < otherSigns.length; i++) {
            let targetAntenna = { ...otherSigns[i] };
            let vector = { x: targetAntenna.col - antenna.col, y: targetAntenna.row - antenna.row };
            let antinode = { x: targetAntenna.col + vector.x, y: targetAntenna.row + vector.y };

            while (antinode.x >= 0 && antinode.x < matrix[0].length && antinode.y >= 0 && antinode.y < matrix.length) {
                antinodeMatrix[antinode.y][antinode.x] = ANTINODE;

                if (antenna.alsoAntinode !== 1)
                    antenna.alsoAntinode = 1;

                if (antennas.find(x => x.sign == otherSigns[i].sign && x.row == otherSigns[i].row && x.col == otherSigns[i].col)?.alsoAntinode !== 1)
                    antennas.find(x => x.sign == otherSigns[i].sign && x.row == otherSigns[i].row && x.col == otherSigns[i].col).alsoAntinode = 1;

                targetAntenna.row = antinode.y;
                targetAntenna.col = antinode.x;
                antinode = { x: targetAntenna.col + vector.x, y: targetAntenna.row + vector.y };
            }

        }
    });

    drawMap(antinodeMatrix);

    antennaAdjustment = antennas.filter(a => a.alsoAntinode === 1 && antinodeMatrix[a.row][a.col] !== ANTINODE).length;
    return antinodeMatrix.reduce((acc, row) => acc + row.filter(cell => cell === ANTINODE).length, 0) + antennaAdjustment;

}

function getMatrix() {
    const lines = input.split(LINE_SEP);
    const matrix = [];
    for (let i = 0; i < lines.length; i++) {
        matrix.push(lines[i].split('').map(String));
    }
    return matrix;
}

function drawMap(map) {
    map.forEach(row => console.debug(row.join('')));
}

var testInput =
    `............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............`;

var testInputP2 =
    `T.........
...T......
.T........
..........
..........
..........
..........
..........
..........
..........`;

var input = `..................................................
.................................C................
.e..........7O....................................
.....................................z............
......................t.........C.......k.........
............h................................9....
.............5.7....O.............9C..............
.......5.O................T.......................
.............................o...c....z...........
.hH...........e..7.............................w..
......H...................c....3.T..5.............
.....H........5..........B...........3..z..c......
....6........H.........t..........................
........O..................e........3.............
............e.........o..............9............
.........s.........o..............................
.......................k........4.....3..z.w......
......s.................t..T.k............8.......
.......s............................T.....w.......
..................................C.7.............
..................................................
.........................t......b.w...............
............................X...................8.
.............6..........k.........................
............................1................8....
...............................8..................
....h........................b....................
............................................c.....
..J...............................................
.....................................K............
..............................x...................
..................................................
....2......0...................x...........1......
...4.....0......................1b................
.............h......................K.jW..........
6...........0...............W.....................
.........6........B...............................
.......2................B..........x........K.....
..................................................
.................................G.......j........
....................E.............................
.......................................S...ZX.....
.....4.......2...B........Wj.....S................
..o...............2..................W....j.......
.....................E..........S..........J......
................E......................1..........
......................G........K.........g........
..............................G....J....S.........
...................G....................Z..Xg.....
4..................E..............J.g....X........`;